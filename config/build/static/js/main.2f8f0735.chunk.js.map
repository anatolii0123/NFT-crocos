{"version":3,"sources":["components/CustomButton/Button.module.sass","assets sync /^/.*$","assets/home/bg.png","assets/home/nft.png","hook/Helper.js","components/CustomButton/index.js","pages/Home/index.js","App.js","reportWebVitals.js","index.js","pages/Home/Home.module.sass"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","getImg","img","require","default","CustomButton","props","className","styles","button","onClick","value","CrocosFarmAddr","CrocosNFTAddr","myAddr","style","position","top","left","transform","bgcolor","border","boxShadow","StandardImageList","console","log","stakeState","checkToken","tokenId","a","web3","Web3","givenProvider","eth","getChainId","web3Modal","Web3Modal","connect","connection","provider","ethers","providers","Web3Provider","signer","getSigner","farmContract","Contract","CrocosFarmCont","abi","nftContract","CrocosNFTCont","approve","nftCon","wait","stake","farmCon","onChange","withdraw","alert","ImageList","sx","width","height","padding","cols","itemData","item","key","ImageListItem","image_card","src","alt","title","loading","ImageListItemBar","Home","useState","open","setOpen","tokensOfOwner","setTokensOfOwner","setStakeState","harvest","setHarvest","useEffect","setInterval","selectedAddress","getTotalClaimable","Math","pow","reward","toString","slice","onClickPick","walletOfOwner","tokenData","i","length","tokenURI","axios","get","nftMetaData","nftTokenData","data","image","name","push","onClickHarvest","stakeBalances","onClickWithdraw","stakeOfOwner","balanceOf","balance","div","backgroundImage","card","box","Modal","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","Box","App","component","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2f8f0735.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__2l3l3\"};","var map = {\n\t\"./home/bg.png\": 610,\n\t\"./home/nft.png\": 611\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 609;","export default __webpack_public_path__ + \"static/media/bg.91a0a0d9.png\";","export default __webpack_public_path__ + \"static/media/nft.c356af35.png\";","export const getImg = (img) => {\r\n    return require(`../assets/${img}`).default\r\n}","import React from \"react\";\r\n\r\nimport styles from './Button.module.sass';\r\n\r\nexport const CustomButton = (props) => {\r\n    return (\r\n        <button className={styles.button} onClick={props.onClick}>\r\n            {props.value}\r\n        </button>\r\n    )\r\n}","import React from \"react\";\r\nimport { useState, useEffect } from 'react'\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport Box from '@mui/material/Box';\r\nimport Modal from '@mui/material/Modal';\r\nimport Fade from '@mui/material/Fade';\r\nimport ImageList from '@mui/material/ImageList';\r\nimport ImageListItem from '@mui/material/ImageListItem';\r\nimport ImageListItemBar from '@mui/material/ImageListItemBar';\r\nimport { ethers } from 'ethers'\r\nimport Web3 from 'web3'\r\nimport Web3Modal from \"web3modal\";\r\nimport { getImg } from \"../../hook/Helper\";\r\nimport styles from './Home.module.sass';\r\nimport axios from 'axios'\r\nimport { CustomButton } from \"../../components/CustomButton\";\r\nimport CrocosFarmCont from \"../../ABI/CrocosFarm.json\";\r\nimport CrocosNFTCont from \"../../ABI/CrocosNFT.json\";\r\nconst CrocosFarmAddr = \"0x9181c0349DA770CB8223eE9fe0ed04A0cCe2104d\";\r\nconst CrocosNFTAddr = \"0xA86238EeE61CE05F0B8698588B86948Ce7B725A6\";\r\nlet myAddr = \"\";\r\n\r\nconst style = {\r\n\tposition: 'absolute',\r\n\ttop: '50%',\r\n\tleft: '50%',\r\n\ttransform: 'translate(-50%, -50%)',\r\n\tbgcolor: 'background.paper',\r\n\tborder: '2px solid #000',\r\n\tboxShadow: 24,\r\n};\r\n\r\n\r\nconst StandardImageList = (props) => {\r\n\tconsole.log(props.stakeState)\r\n\tconst checkToken = async (tokenId) => {\r\n\t\t// super();\r\n\t\tconsole.log(tokenId)\r\n\t\tconst web3 = new Web3(Web3.givenProvider);\r\n\t\tlet farmContract;\r\n\t\tlet nftContract;\r\n\t\ttry {\r\n\t\t\tconst chainId = await web3.eth.getChainId()\r\n\t\t\tif (chainId === 4) {\r\n\t\t\t\tconst web3Modal = new Web3Modal();\r\n\t\t\t\tconst connection = await web3Modal.connect();\r\n\t\t\t\tconst provider = new ethers.providers.Web3Provider(connection);\r\n\t\t\t\tconst signer = provider.getSigner();\r\n\t\t\t\tfarmContract = new ethers.Contract(\r\n\t\t\t\t\tCrocosFarmAddr,\r\n\t\t\t\t\tCrocosFarmCont.abi,\r\n\t\t\t\t\tsigner\r\n\t\t\t\t);\r\n\t\t\t\tnftContract = new ethers.Contract(\r\n\t\t\t\t\tCrocosNFTAddr,\r\n\t\t\t\t\tCrocosNFTCont.abi,\r\n\t\t\t\t\tsigner\r\n\t\t\t\t);\r\n\t\t\t\tif (tokenId) {\r\n\t\t\t\t\tif (props.stakeState === true) {\r\n\t\t\t\t\t\tconst nftCon = await nftContract.approve(CrocosFarmAddr, tokenId);\r\n\t\t\t\t\t\tawait nftCon.wait();\r\n\t\t\t\t\t\tconst farmCon = await farmContract.stake(tokenId);\r\n\t\t\t\t\t\tawait farmCon.wait();\r\n\t\t\t\t\t\tprops.onChange();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconst farmCon = await farmContract.withdraw(tokenId);\r\n\t\t\t\t\t\tawait farmCon.wait();\r\n\t\t\t\t\t\tprops.onChange();\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\talert('Do not have tokenId')\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\talert('The wrong network, please switch to the linkeby network.')\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err)\r\n\t\t}\r\n\r\n\t}\r\n\treturn (\r\n\t\t<ImageList sx={{ width: 'auto', height: 450, padding: '50px' }} cols={4}>\r\n\t\t\t{props.itemData.map((item, key) => (\r\n\t\t\t\t<ImageListItem key={key} onClick={() => checkToken(item.tokenId)} >\r\n\t\t\t\t\t<div className={styles.image_card}>\r\n\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\tsrc={item.img}\r\n\t\t\t\t\t\t\talt={item.title}\r\n\t\t\t\t\t\t\tloading=\"lazy\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<ImageListItemBar\r\n\t\t\t\t\t\t\ttitle={item.title}\r\n\t\t\t\t\t\t\tposition=\"below\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</ImageListItem>\r\n\t\t\t))}\r\n\t\t</ImageList>\r\n\t);\r\n}\r\n\r\nexport const Home = () => {\r\n\r\n\tconst [open, setOpen] = useState(false);\r\n\tconst [tokensOfOwner, setTokensOfOwner] = useState([]);\r\n\tconst [stakeState, setStakeState] = useState(false);\r\n\tconst [harvest, setHarvest] = useState(0);\r\n\tuseEffect(() => {\r\n\t\tsetInterval(async () => {\r\n\t\t\tconst web3 = new Web3(Web3.givenProvider);\r\n\t\t\tlet farmContract;\r\n\t\t\ttry {\r\n\t\t\t\tconst chainId = await web3.eth.getChainId()\r\n\t\t\t\tif (chainId === 4) {\r\n\t\t\t\t\tconst web3Modal = new Web3Modal();\r\n\t\t\t\t\tconst connection = await web3Modal.connect();\r\n\t\t\t\t\tconst provider = new ethers.providers.Web3Provider(connection);\r\n\t\t\t\t\tconst signer = provider.getSigner();\r\n\t\t\t\t\tmyAddr = signer.provider.provider.selectedAddress;\r\n\t\t\t\t\t// console.log(myAddr)\r\n\t\t\t\t\tfarmContract = new ethers.Contract(\r\n\t\t\t\t\t\tCrocosFarmAddr,\r\n\t\t\t\t\t\tCrocosFarmCont.abi,\r\n\t\t\t\t\t\tsigner\r\n\t\t\t\t\t);\r\n\t\t\t\t\tconst reward = (await farmContract.getTotalClaimable(myAddr) / Math.pow(10, 18)).toString().slice(0, 6);\r\n\t\t\t\t\tconsole.log( reward)\r\n\t\t\t\t\tsetHarvest(reward);\r\n\t\t\t\t} else {\r\n\t\t\t\t\talert('The wrong network, please switch to the linkeby network.')\r\n\t\t\t\t}\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.log(err)\r\n\t\t\t}\r\n\t\t}, 3000)\r\n\t}, [])\r\n\tconst onClickPick = async () => {\r\n\t\tsetStakeState(true);\r\n\t\tconst web3 = new Web3(Web3.givenProvider);\r\n\t\tlet nftContract;\r\n\t\ttry {\r\n\t\t\tconst chainId = await web3.eth.getChainId()\r\n\t\t\tif (chainId === 4) {\r\n\t\t\t\tconst web3Modal = new Web3Modal();\r\n\t\t\t\tconst connection = await web3Modal.connect();\r\n\t\t\t\tconst provider = new ethers.providers.Web3Provider(connection);\r\n\t\t\t\tconst signer = provider.getSigner();\r\n\t\t\t\tmyAddr = signer.provider.provider.selectedAddress;\r\n\t\t\t\tconsole.log(myAddr)\r\n\t\t\t\tnftContract = new ethers.Contract(\r\n\t\t\t\t\tCrocosNFTAddr,\r\n\t\t\t\t\tCrocosNFTCont.abi,\r\n\t\t\t\t\tprovider\r\n\t\t\t\t);\r\n\t\t\t\t// const balance = await nftContract.balanceOf(myAddr);\r\n\t\t\t\tconst walletOfOwner = await nftContract.walletOfOwner(myAddr);\r\n\t\t\t\tconst tokenData = [];\r\n\t\t\t\tfor (var i = 0; i < walletOfOwner.length; i++) {\r\n\t\t\t\t\tlet tokenURI = await nftContract.tokenURI(walletOfOwner[i] - 0);\r\n\t\t\t\t\t// tokenURI = tokenURI.slice(0, 82)\r\n\t\t\t\t\tconst nftMetaData = await axios.get(tokenURI);\r\n\t\t\t\t\tconsole.log(nftMetaData)\r\n\t\t\t\t\tconst nftTokenData = { img: `https://ipfs.io/ipfs/${nftMetaData.data.image.slice(7)}`, title: nftMetaData.data.name, tokenId: walletOfOwner[i] }\r\n\t\t\t\t\ttokenData.push(nftTokenData);\r\n\t\t\t\t}\r\n\t\t\t\tsetTokensOfOwner(tokenData);\r\n\t\t\t\tconsole.log(tokenData)\r\n\t\t\t\tsetOpen(true)\r\n\t\t\t} else {\r\n\t\t\t\talert('The wrong network, please switch to the linkeby network.')\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err)\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tconst onClickHarvest = async () => {\r\n\t\tconsole.log('clicked')\r\n\t\tconst web3 = new Web3(Web3.givenProvider);\r\n\t\tlet farmContract;\r\n\t\ttry {\r\n\t\t\tconst chainId = await web3.eth.getChainId()\r\n\t\t\tif (chainId === 4) {\r\n\t\t\t\tconst web3Modal = new Web3Modal();\r\n\t\t\t\tconst connection = await web3Modal.connect();\r\n\t\t\t\tconst provider = new ethers.providers.Web3Provider(connection);\r\n\t\t\t\tconst signer = provider.getSigner();\r\n\t\t\t\tmyAddr = signer.provider.provider.selectedAddress;\r\n\t\t\t\tconsole.log(myAddr)\r\n\t\t\t\tfarmContract = new ethers.Contract(\r\n\t\t\t\t\tCrocosFarmAddr,\r\n\t\t\t\t\tCrocosFarmCont.abi,\r\n\t\t\t\t\tsigner\r\n\t\t\t\t);\r\n\t\t\t\tconst stakeCount = await farmContract.stakeBalances(myAddr);\r\n\t\t\t\tif (stakeCount > 0) {\r\n\t\t\t\t\tawait farmContract.harvest();\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\t\t\t\talert('The wrong network, please switch to the linkeby network.')\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err)\r\n\t\t}\r\n\t}\r\n\r\n\tconst onClickWithdraw = async () => {\r\n\t\tsetStakeState(false);\r\n\t\tconst tokenData = [];\r\n\t\tconsole.log('clicked')\r\n\t\tconst web3 = new Web3(Web3.givenProvider);\r\n\t\tlet farmContract;\r\n\t\tlet nftContract;\r\n\t\ttry {\r\n\t\t\tconst chainId = await web3.eth.getChainId()\r\n\t\t\tif (chainId === 4) {\r\n\t\t\t\tconst web3Modal = new Web3Modal();\r\n\t\t\t\tconst connection = await web3Modal.connect();\r\n\t\t\t\tconst provider = new ethers.providers.Web3Provider(connection);\r\n\t\t\t\tconst signer = provider.getSigner();\r\n\t\t\t\tmyAddr = signer.provider.provider.selectedAddress;\r\n\t\t\t\tconsole.log(myAddr)\r\n\t\t\t\tfarmContract = new ethers.Contract(\r\n\t\t\t\t\tCrocosFarmAddr,\r\n\t\t\t\t\tCrocosFarmCont.abi,\r\n\t\t\t\t\tsigner\r\n\t\t\t\t);\r\n\t\t\t\tnftContract = new ethers.Contract(\r\n\t\t\t\t\tCrocosNFTAddr,\r\n\t\t\t\t\tCrocosNFTCont.abi,\r\n\t\t\t\t\tsigner\r\n\t\t\t\t);\r\n\t\t\t\tconst stakeOfOwner = await farmContract.stakeOfOwner(myAddr);\r\n\t\t\t\tconsole.log(stakeOfOwner)\r\n\t\t\t\tconst balance = await nftContract.balanceOf(myAddr);\r\n\t\t\t\tconsole.log(balance)\r\n\t\t\t\tfor (var i = 0; i < stakeOfOwner.length; i++) {\r\n\t\t\t\t\tlet tokenURI = await nftContract.tokenURI(stakeOfOwner[i]);\r\n\t\t\t\t\t// tokenURI = tokenURI.slice(0, 82)\r\n\t\t\t\t\tconsole.log(tokenURI);\r\n\t\t\t\t\tconst nftMetaData = await axios.get(tokenURI);\r\n\t\t\t\t\tconst nftTokenData = { img: `https://ipfs.io/ipfs/${nftMetaData.data.image.slice(7)}`, title: nftMetaData.data.name, tokenId: stakeOfOwner[i] }\r\n\t\t\t\t\ttokenData.push(nftTokenData);\r\n\t\t\t\t}\r\n\t\t\t\tsetTokensOfOwner(tokenData);\r\n\t\t\t\tconsole.log(tokenData)\r\n\t\t\t\tsetOpen(true)\r\n\t\t\t} else {\r\n\t\t\t\talert('The wrong network, please switch to the linkeby network.')\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err)\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={styles.div} style={{ backgroundImage: `url(${getImg('home/bg.png')})` }}>\r\n\t\t\t<div className={styles.card}>\r\n\t\t\t\t<div className={styles.title}>Stake NFT get CROCOS</div>\r\n\t\t\t\t<img src={getImg('home/nft.png')} alt=\"nft\" />\r\n\t\t\t\t<CustomButton value=\"Pick NFT\" onClick={onClickPick} />\r\n\t\t\t\t<div className={styles.box}>\r\n\t\t\t\t\t<h5>Reward</h5>\r\n\t\t\t\t\t<p>{harvest} CROCOS</p>\r\n\t\t\t\t\t<CustomButton value=\"Harvest\" onClick={onClickHarvest} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<CustomButton value=\"Withdraw\" onClick={onClickWithdraw} />\r\n\t\t\t</div>\r\n\t\t\t<Modal\r\n\t\t\t\topen={open}\r\n\t\t\t\tonClose={() => setOpen(false)}\r\n\t\t\t\tcloseAfterTransition\r\n\t\t\t\tBackdropComponent={Backdrop}\r\n\t\t\t\tBackdropProps={{\r\n\t\t\t\t\ttimeout: 500,\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<Fade in={open}>\r\n\t\t\t\t\t<Box sx={style}>\r\n\t\t\t\t\t\t<StandardImageList itemData={tokensOfOwner} stakeState={stakeState} onChange={() => setOpen(false)} />\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Fade>\r\n\t\t\t</Modal>\r\n\t\t</div>\r\n\t)\r\n}","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\nimport { Home } from './pages/Home';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route component={Home} path=\"/\" />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport './index.sass';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"div\":\"Home_div__3jh5E\",\"card\":\"Home_card__3jlaf\",\"title\":\"Home_title__ca3Tz\",\"box\":\"Home_box__37QO6\",\"image_card\":\"Home_image_card__1mcOu\"};"],"sourceRoot":""}